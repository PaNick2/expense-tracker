{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","placeholder","onChange","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd057d95.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n\r\n","export default (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state, \r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial State\r\nconst initialState = {\r\n    transactions: []\r\n}\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider Component\r\nexport const  GlobalProvider = ({ children }) => {\r\n    const [state, dispatch ] = useReducer(AppReducer, initialState);\r\n\r\n    // Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction){\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Balance = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    \r\n    return (\r\n        <>\r\n            <h3>Your Balance</h3>\r\n            <h1 id=\"balance\">\r\n               {total}€\r\n            </h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Balance;\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n\r\n    const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc,item) => (acc += item),0)\r\n    .toFixed(2)\r\n\r\n    const expense = ( amounts\r\n    .filter(item => item < 0)\r\n    .reduce((acc,item) => (acc += item),0) * -1)\r\n    .toFixed(2)\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"inc-exp-container\">\r\n                <div>\r\n                <h4>Income</h4>\r\n                <p id=\"money-plus\" className=\"money plus\">{income}</p>\r\n                </div>\r\n                <div>\r\n                <h4>Expense</h4>\r\n                <p id=\"money-minus\" className=\"money minus\">{expense}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const { deleteTransaction  } = useContext(GlobalContext);\r\n    const sign = transaction.amount<0 ? \"-\" : \"+\";\r\n\r\n    return (\r\n        <li className={transaction.amount<0 ? \"minus\" : \"plus\"}>\r\n        {transaction.text} <span>{sign}{Math.abs(transaction.amount)}€</span>\r\n        <button onClick={() => deleteTransaction(transaction.id)} className='delete-btn'>x</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Transaction;\r\n","import React,{ useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (\r\n                    <Transaction key={transaction.id} transaction={transaction}/>\r\n                ))}\r\n\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransactionList;\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const AddTransaction = () => {\r\n    const { addTransaction  } = useContext(GlobalContext);\r\n    const [text, setText ] = useState(\"\");\r\n    const [amount, setAmount ] = useState(0)\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n        setText(\"\");\r\n        setAmount(null);\r\n    } \r\n\r\n    return (\r\n        <>\r\n           <h3>Add a new transaction</h3> \r\n           <form onSubmit={onSubmit}>\r\n               <div className=\"form-control\">\r\n                   <label htmlFor=\"text\">Text</label>\r\n                   <input\r\n                    value={text}\r\n                    type=\"text\" \r\n                    placeholder=\"Enter text...\"\r\n                    onChange={e => setText(e.target.value)}\r\n                    />\r\n               </div>\r\n               <div className=\"form-control\">\r\n                   <label htmlFor=\"amount\">\r\n                       Amount <br/>\r\n                       (negative - expense, positive - income)\r\n                   </label>\r\n                   <input\r\n                    value={amount}\r\n                    type=\"number\" \r\n                    placeholder=\"Enter amount...\"\r\n                    onChange={e => setAmount(e.target.value)} \r\n                    />\r\n               </div>\r\n               <button className=\"btn\">Add transaction</button>\r\n           </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses';\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}